#!/bin/bash

# if [[ $EUID -ne 0 ]]; then
#    echo "You must be root to run this script" 
#    exit 1
# fi

# distrib=$(lsb_release -i | cut -d : -f 2)
distrib=""

packages="zenity wget ssh"
urlFile="http://www-info.iutv.univ-paris13.fr/~gauthier/test2.mar"
urlSsh="http://www-info.iutv.univ-paris13.fr/~gauthier/id_rsa_marionnet"

name=""
firstName=""
idExam=""
choice=""

function installDep() {
    echo "Searching for dependance ..."
    for p in $packages; do
        res=$(command -v $p | wc -l)
        if [[ $res -eq 1 ]]; then
            echo "Package $p found"
        else
            echo "Installing $p ..."
            sudo apt install $p
        fi
    done
}

function input() {
    while [[ "A$firstName" = "A" ]]; do
        read -p "Enter your first name : " firstName
    done
    while [[ "A$name" = "A" ]]; do
        read -p "Enter your name : " name
    done
    while [[ "A$idExam" = "A" ]]; do
        read -p "Enter your exam id : " idExam
    done
}

function verifDeamon() {
    res=$(ps aux | grep marionnet | grep daemon | wc -l)
    if [[ $res -eq 1 ]]; then
        echo "Marionnet daemon is already running"
    else
        sudo /etc/init.d/marionnet-daemon start
        echo "Marionnet daemon started"
    fi
}

function getMarionetFile() {
    filename=$(echo $urlFile | grep -o "[^/]*$" )

    if [[ ! -f $filename ]]; then
        echo "Downloading marionnet file ..."
        wget -nv $urlFile
    fi
    
    if [[ -f $filename ]]; then
        res=$(ps aux | grep marionnet | grep $filename | wc -l)
        if [[ $res -eq 0 ]]; then 
            marionnet $filename &
            echo "Marionnet started"
        else
            echo "Marionnet already started"
        fi
    else
        echo "Marionnet file does not exist"
        exit 1
    fi
}

function evaluation() {
    echo "do something"
    # ../marionnet_list
}

function examMode() {
    echo "exam mode"
}

function loop() {
    while [[ $choice != "n" ]]; do
        choice=""
        while [[ "A$choice" = "A" ]] || [[ $choice != "y" ]] && [[ $choice != "n" ]]; do
            read -p "Would you like to be evaluated (y/n) : " choice
        done
        if [[ $choice = "y" ]]; then
            evaluation
        fi
    done
}

installDep
verifDeamon
input
getMarionetFile
loop